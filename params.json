{"name":"Simple-conf","tagline":"easy to use config object for your node.js app","body":"simple-conf\r\n===========\r\n\r\neasy to use config object for your node.js app\r\n\r\n### Installation\r\n\r\nStep 1) `npm install simple-conf --save`\r\n\r\nStep 2) view `/examples/example.js` (or copy and paste to your app)\r\n\r\nStep 3) require the `/examples/example.js` file inside your app somewhere and `console.log()`\r\n\r\n### Heads up!\r\nsimple-conf is set to look for a couple environment vars by default, although, if you don't want to set these it will set some defaults instead..\r\n\r\n  - `process.env.NODE_PASS`, this will set your initial seed admin password and keep this sensitive stuff\r\n  out of your repo. defaults to: `superSecretPassWordDawgz1!2@`\r\n  \r\n  - `process.env.MONGO_DB_STRING`, this will link up your mongodb url, good for production and public repos\r\n\r\n  - I don't want to set these up! Oh, that's cool too -- it's not going to break, it's just there to help.\r\n\r\n### Config Helpers (new)\r\nI've included a couple helpers that I use on my apps and find helpful -- maybe you will too?\r\n\r\n`extended` - requires `req` good for middleware, or schema stuff that has access to req, adds:\r\n  - `ip = req.headers[\"x-forwarded-for\"] or req.connection.remoteAddress`\r\n  - `user = if req.user? then req.user.username else \"anonymous\"`\r\n  - `engine = req.protocol + \"://\" + req.get('host')`\r\n\r\n`folders` - requires `path` & `function (err, path)`\r\n  - adds folders easily so you don't have to deal with `.placeholder` files and whatnot\r\n\r\n`colors` - no requirements\r\n  - `red` outputs red font color to stdout\r\n  - `cyan` outputs cyan font color to stdout\r\n  - `reset` resets font color to stdout\r\n\r\n### Example\r\n```coffee\r\n\r\nConfig = require \"..\"\r\n\r\nfs = require \"fs\"\r\npath = require \"path\"\r\n\r\nenv = process.env.NODE_ENV\r\n\r\nport = if env == \"production\" then process.env.port else 3000\r\nhost = if env == \"development\" then \"http://localhost:#{port}\" \r\n\r\nproduction = env == \"production\"\r\ndevelopment = env == \"development\"\r\n\r\nconfig =\r\n  api:\r\n    github:\r\n      username: \"dhigginbotham\"\r\n    coderbits:\r\n      username: \"dhz\"\r\n  app:\r\n    title: \"example-app\"\r\n    initials: \"xpl\"\r\n    port: port\r\n    host: host\r\n    serverStart: \"Starting up your express engines\"\r\n    paths: \r\n      uploads: path.join __dirname, \"..\", \"public\", \"uploads\"\r\n      views: path.join __dirname, \"..\", \"views\"\r\n      assets: path.join __dirname, \"..\", \"public\"\r\n  seed:\r\n    init: if production == true then false else true\r\n  debug:\r\n    mongo: if production == true then false else false\r\n\r\nconf = new Config config\r\n\r\nif conf.debug.config == true then console.log conf\r\n\r\nmodule.exports = conf\r\n\r\n```\r\n\r\n### Defaults\r\n`note` - defaults are now optional, ex: `new Config object, false` renders a more modular config for mountable apps.\r\n\r\n```coffee\r\n\r\n  @app = {}\r\n  @app.title = \"Default-config-build\"\r\n  @app.initials = \"dcb\"\r\n  @app.port = process.env.port || 3000\r\n  @app.host = \"http://localhost#{@app.port}\"\r\n  @app.serverStart = \"Starting express server \"\r\n\r\n  @db = {}\r\n  @db.path = \"#{@app.initials}\"\r\n  @db.url = process.env.MONGO_DB_STRING || \"mongodb://localhost/#{@db.path}\"\r\n\r\n  @sesh = {}\r\n  @sesh.key = \"#{@app.initials}.id\"\r\n  @sesh.secret = _secret\r\n  @sesh.maxAge = 60 * 60 * 1000\r\n\r\n  @seed = {}\r\n  @seed.init = false\r\n  @seed.folders = true\r\n\r\n  @users = {}\r\n  @users.roles = ['user', 'admin', 'editor', 'commenter']\r\n  @users.signupEnabled = true\r\n\r\n  @debug = {}\r\n  @debug.override = false\r\n\r\n  if opts? then _.extend @, opts\r\n\r\n  if @seed.init == true\r\n    @seed.user = {}\r\n    @seed.user.username = \"admin\"\r\n    @seed.user.password = \"@dminPassw0rd\"\r\n    @seed.user.admin = true\r\n    @seed.user.role = \"admin\"\r\n    @seed.user.email = \"admin@localhost.it\"\r\n    @seed.user.ip = \"admin.ipv6\"\r\n\r\n  @\r\n\r\n```\r\n\r\n### License\r\n```md\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2013 David Higginbotham \r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}